\settings {
"#Proof-Settings-Config-File
#Thu Mar 31 16:47:23 CEST 2022
[View]HideClosedSubtrees=false
[View]FontIndex=2
[General]UseJML=true
[View]HideIntermediateProofsteps=false
[SimultaneousUpdateSimplifier]DeleteEffectLessLocations=true
[General]SoundNotification=true
[View]ShowWholeTaclet=false
[Strategy]ActiveStrategy=HoareStrategy
[StrategyProperty]USER_TACLETS_OPTIONS_KEY1=USER_TACLETS_OFF
[StrategyProperty]QUANTIFIERS_OPTIONS_KEY=QUANTIFIERS_NON_SPLITTING_WITH_PROGS
[StrategyProperty]USER_TACLETS_OPTIONS_KEY2=USER_TACLETS_OFF
[Choice]DefaultChoices=initialisation-initialisation\:disableStaticInitialisation , nullPointerPolicy-nullPointerPolicy\:nullCheck , throughout-throughout\:toutOn , javacard-javacard\:jcOff , transactionAbort-transactionAbort\:abortOn , transactions-transactions\:transactionsOn , intRules-intRules\:arithmeticSemanticsIgnoringOF , programRules-programRules\:Java
[StrategyProperty]LOOP_OPTIONS_KEY=LOOP_INVARIANT
[DecisionProcedure]ActiveRule=N/A
[SimultaneousUpdateSimplifier]EagerSimplification=true
[General]DnDDirectionSensitive=true
[DecisionProcedure]Timeout=60
[StrategyProperty]NON_LIN_ARITH_OPTIONS_KEY=NON_LIN_ARITH_NONE
[Libraries]Default=C\:\\Users\\mcr99\\.key\\libraries\\deprecatedRules.key-false, C\:\\Users\\mcr99\\.key\\libraries\\acc.key-false, C\:\\Users\\mcr99\\.key\\libraries\\stringRules.key-false
[Strategy]MaximumNumberOfAutomaticApplications=1000
[StrategyProperty]STOPMODE_OPTIONS_KEY=STOPMODE_DEFAULT
[Choice]Choices=initialisation-initialisation\:disableStaticInitialisation-initialisation\:enableStaticInitialisation , throughout-throughout\:toutOff-throughout\:toutOn , nullPointerPolicy-nullPointerPolicy\:nullCheck-nullPointerPolicy\:noNullCheck , javacard-javacard\:jcOn-javacard\:jcOff , transactionAbort-transactionAbort\:abortOn-transactionAbort\:abortOff , transactions-transactions\:transactionsOff-transactions\:transactionsOn , intRules-intRules\:javaSemantics-intRules\:arithmeticSemanticsIgnoringOF-intRules\:arithmeticSemanticsCheckingOF , programRules-programRules\:ODL-programRules\:Java
[StrategyProperty]QUERY_OPTIONS_KEY=QUERY_NONE
[Strategy]Timeout=-1
[General]ProofAssistant=false
[General]StupidMode=true
[StrategyProperty]METHOD_OPTIONS_KEY=METHOD_EXPAND
[StrategyProperty]USER_TACLETS_OPTIONS_KEY3=USER_TACLETS_OFF
[StrategyProperty]GOALCHOOSER_OPTIONS_KEY=GOALCHOOSER_DEFAULT
[General]UseOCL=false
[View]MaxTooltipLines=40
[StrategyProperty]SPLITTING_OPTIONS_KEY=SPLITTING_DELAYED
"
}

\programVariables{
  int x, y, x0, y0, m;
}

\problem {
(
y >= 0 & y0 >= 0 & y = y0 & x = x0

) ->
(
\[{
    m=0;
    while ( y>0 ) {
    if (y>3) {
        m=m+(4*x);
        y=y-4;
      }
                  else {
        m=m+x;
        y=y-1;
      }
    }
  }\] m = x0 * y0

)
}

\proof {
(keyLog "0" (keyUser "mcr99" ) (keyVersion "a9aca35c014abb52060cff630741519ad9088fea"))

(autoModeTime "601")

(branch "dummy ID"
(rule "assignment" (formula "2") (userinteraction))
(builtin "Loop Invariant" (formula "2") (inst "x = x0 & y >= 0 & m = x0 * (y0 - y)"))
(branch " Invariant Initially Valid"
   (builtin "Update Simplification")
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "castDelInt" (formula "5") (term "0,1"))
   (rule "eqSymm" (formula "5") (term "0,0"))
   (rule "eqSymm" (formula "4"))
   (rule "eqSymm" (formula "3"))
   (rule "eqSymm" (formula "5") (term "1"))
   (rule "replace_known_left" (formula "5") (term "0,0") (ifseqformula "4"))
   (rule "concrete_and_1" (formula "5") (term "0"))
   (rule "replace_known_left" (formula "5") (term "0") (ifseqformula "1"))
   (rule "concrete_and_1" (formula "5"))
   (rule "polySimp_elimSub" (formula "5") (term "1,0"))
   (rule "polySimp_addComm0" (formula "5") (term "1,0"))
   (rule "polySimp_rightDist" (formula "5") (term "0"))
   (rule "polySimp_mulAssoc" (formula "5") (term "0,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,0,0"))
   (rule "applyEq" (formula "2") (term "0") (ifseqformula "3"))
   (rule "applyEq" (formula "4") (term "1,1,0") (ifseqformula "3"))
   (rule "applyEq" (formula "4") (term "0,1,0") (ifseqformula "2"))
   (rule "polySimp_addComm0" (formula "4") (term "0"))
   (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "3"))
   (rule "polySimp_pullOutFactor1" (formula "4") (term "0"))
   (rule "add_literals" (formula "4") (term "1,0"))
   (rule "times_zero_1" (formula "4") (term "0"))
   (rule "eqClose" (formula "4"))
   (rule "closeTrue" (formula "4"))
)
(branch " Preserves Invariant"
   (rule "conditional" (formula "2") (userinteraction))
   (branch " 
y>3=TRUE (then-branch)"
      (rule "assignment" (formula "3") (userinteraction))
      (rule "assignment" (formula "3") (userinteraction))
      (builtin "Update Simplification")
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "andLeft" (formula "2"))
      (rule "eqSymm" (formula "6") (term "1,0,2"))
      (rule "eqSymm" (formula "6") (term "0,0,0,2"))
      (rule "translateJavaSubInt" (formula "6") (term "1"))
      (rule "translateJavaMulInt" (formula "6") (term "1,0"))
      (rule "eqSymm" (formula "4"))
      (rule "eqSymm" (formula "2"))
      (rule "translateJavaAddInt" (formula "6") (term "0"))
      (rule "polySimp_elimSub" (formula "6") (term "1,0,1,0,2"))
      (rule "polySimp_elimSub" (formula "6") (term "1"))
      (rule "mul_literals" (formula "6") (term "1,1"))
      (rule "polySimp_elimSub" (formula "4") (term "1,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "inEqSimp_gtToGeq" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1,0,0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_gtToGeq" (formula "5"))
      (rule "times_zero_1" (formula "5") (term "1,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0"))
      (rule "polySimp_addComm0" (formula "6") (term "1,0,1,0,2"))
      (rule "polySimp_addComm0" (formula "6") (term "1"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1,0,2"))
      (rule "polySimp_homoEq" (formula "6") (term "1,0,2"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0,1,0,2"))
      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,1,0,1,0,2"))
      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,1,0,1,0,2"))
      (rule "polySimp_rightDist" (formula "4") (term "0"))
      (rule "polySimp_homoEq" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0,1,0,2"))
      (rule "polySimp_mulAssoc" (formula "6") (term "0,1,0,1,0,2"))
      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0,1,0,2"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,1,0,2"))
      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,1,0,2"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,1,0,2"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "2"))
      (rule "polySimp_sepNegMonomial" (formula "6") (term "1,0,2"))
      (rule "polySimp_mulLiterals" (formula "6") (term "0,1,0,2"))
      (rule "polySimp_elimOne" (formula "6") (term "0,1,0,2"))
      (rule "inEqSimp_sepPosMonomial1" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "polySimp_sepNegMonomial" (formula "4"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0"))
      (rule "polySimp_elimOne" (formula "4") (term "0"))
      (rule "inEqSimp_sepPosMonomial1" (formula "5"))
      (rule "mul_literals" (formula "5") (term "1"))
      (rule "inEqSimp_subsumption1" (formula "3") (ifseqformula "5"))
      (rule "leq_literals" (formula "3") (term "0"))
      (rule "concrete_or_1" (formula "3"))
      (rule "true_left" (formula "3"))
      (rule "inEqSimp_subsumption1" (formula "4") (ifseqformula "1"))
      (rule "leq_literals" (formula "4") (term "0"))
      (rule "concrete_or_1" (formula "4"))
      (rule "true_left" (formula "4"))
      (rule "exit" (formula "4") (userinteraction))
      (builtin "Update Simplification")
      (rule "castDelInt" (formula "4") (term "0,1,0"))
      (rule "castDelInt" (formula "4") (term "0,1,1"))
      (rule "castDelInt" (formula "4") (term "0,1,1,1"))
      (rule "replace_known_left" (formula "4") (term "0,0") (ifseqformula "2"))
      (rule "concrete_and_1" (formula "4") (term "0"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,1,1"))
      (rule "polySimp_rightDist" (formula "4") (term "1,1,1"))
      (rule "polySimp_addAssoc" (formula "4") (term "1,1"))
      (rule "applyEq" (formula "4") (term "1,0,1") (ifseqformula "2"))
      (rule "applyEq" (formula "4") (term "0,1") (ifseqformula "3"))
      (rule "polySimp_homoEq" (formula "4") (term "1"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0,1"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0,1"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,1,0,1"))
      (rule "polySimp_addComm1" (formula "4") (term "0,1"))
      (rule "polySimp_addAssoc" (formula "4") (term "0,0,1"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,0,1"))
      (rule "polySimp_addComm1" (formula "4") (term "0,0,0,0,1"))
      (rule "polySimp_pullOutFactor1" (formula "4") (term "0,0,0,0,0,1"))
      (rule "add_literals" (formula "4") (term "1,0,0,0,0,0,1"))
      (rule "times_zero_1" (formula "4") (term "0,0,0,0,0,1"))
      (rule "add_zero_left" (formula "4") (term "0,0,0,0,1"))
      (rule "applyEq" (formula "4") (term "1,1,0,1") (ifseqformula "2"))
      (rule "polySimp_pullOutFactor2b" (formula "4") (term "0,1"))
      (rule "add_literals" (formula "4") (term "1,1,0,1"))
      (rule "times_zero_1" (formula "4") (term "1,0,1"))
      (rule "add_zero_right" (formula "4") (term "0,1"))
      (rule "applyEq" (formula "4") (term "0,1,0,1") (ifseqformula "2"))
      (rule "polySimp_pullOutFactor0" (formula "4") (term "0,1"))
      (rule "add_literals" (formula "4") (term "1,0,1"))
      (rule "times_zero_1" (formula "4") (term "0,1"))
      (rule "eqClose" (formula "4") (term "1"))
      (rule "concrete_and_3" (formula "4"))
      (rule "inEqSimp_geqRight" (formula "4"))
      (rule "times_zero_1" (formula "1") (term "1,0,0"))
      (rule "add_zero_right" (formula "1") (term "0,0"))
      (rule "polySimp_addAssoc" (formula "1") (term "0"))
      (rule "add_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_sepPosMonomial0" (formula "1"))
      (rule "mul_literals" (formula "1") (term "1"))
      (rule "inEqSimp_contradInEq1" (formula "1") (ifseqformula "2"))
      (rule "qeq_literals" (formula "1") (term "0"))
      (rule "concrete_and_2" (formula "1"))
      (rule "closeFalse" (formula "1"))
   )
   (branch " 
y>3=FALSE (else branch)"
      (rule "assignment" (formula "3") (userinteraction))
      (rule "assignment" (formula "3") (userinteraction))
      (rule "exit" (formula "3") (userinteraction))
      (builtin "Update Simplification" (formula "3"))
      (rule "andLeft" (formula "2"))
      (rule "notLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "andLeft" (formula "1"))
      (rule "castDelInt" (formula "6") (term "1,1,1,1"))
      (rule "castDelInt" (formula "6") (term "0,1"))
      (rule "castDelInt" (formula "6") (term "0,1,0"))
      (rule "eqSymm" (formula "6") (term "0,0"))
      (rule "eqSymm" (formula "3"))
      (rule "eqSymm" (formula "1"))
      (rule "translateJavaSubInt" (formula "6") (term "1,1,1,1"))
      (rule "translateJavaAddInt" (formula "6") (term "0,1"))
      (rule "translateJavaSubInt" (formula "6") (term "0,1,0"))
      (rule "eqSymm" (formula "6") (term "1"))
      (rule "replace_known_left" (formula "6") (term "0,0") (ifseqformula "1"))
      (rule "concrete_and_1" (formula "6") (term "0"))
      (rule "polySimp_elimSub" (formula "3") (term "1,0"))
      (rule "polySimp_elimSub" (formula "6") (term "1,1,0,1"))
      (rule "mul_literals" (formula "6") (term "1,1,1,0,1"))
      (rule "polySimp_elimSub" (formula "6") (term "0,0"))
      (rule "mul_literals" (formula "6") (term "1,0,0"))
      (rule "polySimp_elimSub" (formula "6") (term "1,0,1"))
      (rule "inEqSimp_gtRight" (formula "5"))
      (rule "mul_literals" (formula "1") (term "0,0"))
      (rule "inEqSimp_gtToGeq" (formula "5"))
      (rule "times_zero_1" (formula "5") (term "1,0,0"))
      (rule "add_zero_right" (formula "5") (term "0,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,1,0,1"))
      (rule "polySimp_addComm0" (formula "4") (term "1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "0,0"))
      (rule "replace_known_left" (formula "6") (term "0") (ifseqformula "5"))
      (rule "concrete_and_1" (formula "6"))
      (rule "polySimp_addComm0" (formula "6") (term "1,1,1,0"))
      (rule "polySimp_rightDist" (formula "4") (term "0"))
      (rule "polySimp_homoEq" (formula "4"))
      (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,1,0"))
      (rule "mul_literals" (formula "6") (term "0,1,1,0"))
      (rule "polySimp_addComm0" (formula "6") (term "1,0"))
      (rule "polySimp_rightDist" (formula "4") (term "1,0"))
      (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
      (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
      (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
      (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0"))
      (rule "polySimp_homoEq" (formula "6"))
      (rule "polySimp_mulComm0" (formula "6") (term "1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1,1,0"))
      (rule "polySimp_elimOne" (formula "6") (term "0,0,1,1,0"))
      (rule "polySimp_mulComm1" (formula "6") (term "1,0,1,1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "1,0"))
      (rule "polySimp_rightDist" (formula "6") (term "0,1,0"))
      (rule "polySimp_mulLiterals" (formula "6") (term "1,0,1,0"))
      (rule "polySimp_elimOne" (formula "6") (term "1,0,1,0"))
      (rule "polySimp_mulComm0" (formula "6") (term "0,0,1,0"))
      (rule "polySimp_addAssoc" (formula "4") (term "0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0"))
      (rule "polySimp_addAssoc" (formula "6") (term "0,0"))
      (rule "applyEq" (formula "6") (term "1,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "2"))
      (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "6") (term "1,1,0,0") (ifseqformula "2"))
      (rule "applyEq" (formula "6") (term "0,1,0,0,0") (ifseqformula "2"))
      (rule "polySimp_pullOutFactor1b" (formula "6") (term "0,0,0"))
      (rule "add_literals" (formula "6") (term "1,1,0,0,0"))
      (rule "times_zero_1" (formula "6") (term "1,0,0,0"))
      (rule "add_zero_right" (formula "6") (term "0,0,0"))
      (rule "close" (formula "6") (ifseqformula "4"))
   )
)
(branch " Use Invariant"
   (rule "exit" (formula "2") (userinteraction))
   (rule "andLeft" (formula "1"))
   (rule "andLeft" (formula "1"))
   (rule "notLeft" (formula "3"))
   (rule "andLeft" (formula "1"))
   (rule "eqSymm" (formula "5"))
   (rule "eqSymm" (formula "3"))
   (rule "eqSymm" (formula "1"))
   (rule "polySimp_elimSub" (formula "3") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "0"))
   (rule "inEqSimp_gtRight" (formula "4"))
   (rule "times_zero_1" (formula "1") (term "0,0"))
   (rule "add_zero_left" (formula "1") (term "0"))
   (rule "polySimp_addComm0" (formula "4") (term "1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "0"))
   (rule "polySimp_homoEq" (formula "4"))
   (rule "polySimp_mulComm0" (formula "4") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,1,0"))
   (rule "polySimp_rightDist" (formula "4") (term "1,0"))
   (rule "polySimp_mulAssoc" (formula "4") (term "0,1,0"))
   (rule "polySimp_mulComm0" (formula "4") (term "0,0,1,0"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0,1,0"))
   (rule "polySimp_elimOne" (formula "4") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "4") (term "0"))
   (rule "applyEq" (formula "5") (term "1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "4") (term "1,0,1,0") (ifseqformula "2"))
   (rule "applyEq" (formula "4") (term "1,1,0,0") (ifseqformula "2"))
   (rule "polySimp_sepNegMonomial" (formula "4"))
   (rule "polySimp_mulLiterals" (formula "4") (term "0"))
   (rule "polySimp_elimOne" (formula "4") (term "0"))
   (rule "applyEq" (formula "5") (term "0") (ifseqformula "4"))
   (rule "polySimp_homoEq" (formula "5"))
   (rule "polySimp_mulComm0" (formula "5") (term "1,0"))
   (rule "polySimp_rightDist" (formula "5") (term "1,0"))
   (rule "polySimp_mulComm0" (formula "5") (term "0,1,0"))
   (rule "polySimp_addAssoc" (formula "5") (term "0"))
   (rule "polySimp_pullOutFactor1" (formula "5") (term "0,0"))
   (rule "add_literals" (formula "5") (term "1,0,0"))
   (rule "times_zero_1" (formula "5") (term "0,0"))
   (rule "add_zero_left" (formula "5") (term "0"))
   (rule "polySimp_invertEq" (formula "5"))
   (rule "polySimp_mulLiterals" (formula "5") (term "0"))
   (rule "times_zero_2" (formula "5") (term "1"))
   (rule "polySimp_elimOne" (formula "5") (term "0"))
   (rule "inEqSimp_antiSymm" (formula "3") (ifseqformula "1"))
   (rule "applyEq" (formula "1") (term "0") (ifseqformula "3"))
   (rule "leq_literals" (formula "1"))
   (rule "true_left" (formula "1"))
   (rule "applyEq" (formula "5") (term "0,0") (ifseqformula "2"))
   (rule "times_zero_2" (formula "5") (term "0"))
   (rule "eqClose" (formula "5"))
   (rule "closeTrue" (formula "5"))
)
)

}
